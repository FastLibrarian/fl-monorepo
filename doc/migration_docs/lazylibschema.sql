CREATE TABLE authors (AuthorID TEXT UNIQUE, AuthorName TEXT UNIQUE, AuthorImg TEXT, AuthorLink TEXT, DateAdded TEXT, Status TEXT, LastBook TEXT, LastBookImg TEXT, LastLink TEXT, LastDate TEXT, HaveBooks INTEGER DEFAULT 0, TotalBooks INTEGER DEFAULT 0, AuthorBorn TEXT, AuthorDeath TEXT, UnignoredBooks INTEGER DEFAULT 0, Manual TEXT, GRfollow TEXT, LastBookID TEXT, Updated INTEGER DEFAULT 0, Reason TEXT, About TEXT, AKA TEXT, gr_id TEXT, HaveEBooks INTEGER DEFAULT 0, HaveAudioBooks INTEGER DEFAULT 0, ol_id TEXT, hc_id TEXT);
CREATE TABLE wanted (BookID TEXT, NZBurl TEXT, NZBtitle TEXT, NZBdate TEXT, NZBprov TEXT, Status TEXT, NZBsize TEXT, AuxInfo TEXT, NZBmode TEXT, Source TEXT, DownloadID TEXT, DLResult TEXT, Completed INTEGER DEFAULT 0, Label TEXT);
CREATE TABLE magazines (Title TEXT UNIQUE, Regex TEXT, Status TEXT, MagazineAdded TEXT, LastAcquired TEXT, IssueDate TEXT, IssueStatus TEXT, Reject TEXT, LatestCover TEXT, DateType TEXT, CoverPage INTEGER DEFAULT 1, Genre TEXT);
CREATE TABLE languages (isbn TEXT, lang TEXT);
CREATE TABLE stats (authorname text, GR_book_hits int, GR_lang_hits int, LT_lang_hits int, GB_lang_change, cache_hits int, bad_lang int, bad_char int, uncached int, duplicates int);
CREATE TABLE downloads (Count INTEGER DEFAULT 0, Provider TEXT);
CREATE TABLE isbn (Words TEXT, ISBN TEXT);
CREATE TABLE genres (GenreID INTEGER PRIMARY KEY AUTOINCREMENT, GenreName TEXT UNIQUE);
CREATE TABLE sqlite_sequence(name,seq);
CREATE TABLE comics (ComicID TEXT UNIQUE, Title TEXT, Status TEXT, Added TEXT, LastAcquired TEXT, Updated TEXT, LatestIssue TEXT, IssueStatus TEXT, LatestCover TEXT, SearchTerm TEXT, Start TEXT, First INTEGER, Last INTEGER, Publisher TEXT, Link TEXT, aka TEXT, Description TEXT, Genre TEXT);
CREATE TABLE jobs (Name TEXT, Finish INTEGER DEFAULT 0, Start INTEGER DEFAULT 0);
CREATE TABLE books (AuthorID TEXT REFERENCES authors (AuthorID) ON DELETE CASCADE, BookName TEXT, BookSub TEXT, BookDesc TEXT, BookGenre TEXT, BookIsbn TEXT, BookPub TEXT, BookRate INTEGER DEFAULT 0, BookImg TEXT, BookPages INTEGER DEFAULT 0, BookLink TEXT, BookID TEXT UNIQUE, BookFile TEXT, BookDate TEXT, BookLang TEXT, BookAdded TEXT, Status TEXT, WorkPage TEXT, Manual TEXT, SeriesDisplay TEXT, BookLibrary TEXT, AudioFile TEXT, AudioLibrary TEXT, AudioStatus TEXT, WorkID TEXT, ScanResult TEXT, OriginalPubDate TEXT, Requester TEXT, AudioRequester TEXT, LT_WorkID TEXT, Narrator TEXT, gr_id TEXT, ol_id TEXT, gb_id TEXT, hc_id TEXT);
CREATE TABLE issues (Title TEXT REFERENCES magazines (Title) ON DELETE CASCADE, IssueID TEXT UNIQUE, IssueAcquired TEXT, IssueDate TEXT, IssueFile TEXT, Cover TEXT);
CREATE TABLE sync (UserID TEXT REFERENCES users (UserID) ON DELETE CASCADE, Label TEXT, Date TEXT, SyncList TEXT);
CREATE TABLE failedsearch (BookID TEXT REFERENCES books (BookID) ON DELETE CASCADE, Library TEXT, Time TEXT, Interval INTEGER DEFAULT 0, Count INTEGER DEFAULT 0);
CREATE TABLE genrebooks (GenreID INTEGER REFERENCES genres (GenreID) ON DELETE CASCADE, BookID TEXT REFERENCES books (BookID) ON DELETE CASCADE, UNIQUE (GenreID,BookID));
CREATE TABLE comicissues (ComicID TEXT REFERENCES comics (ComicID) ON DELETE CASCADE, IssueID TEXT, IssueAcquired TEXT, IssueFile TEXT, Cover TEXT, Description TEXT, Link TEXT, Contributors TEXT, UNIQUE (ComicID, IssueID));
CREATE TABLE sent_file (WhenSent TEXT, UserID TEXT REFERENCES users (UserID) ON DELETE CASCADE, Addr TEXT, FileName TEXT);
CREATE TABLE pastissues (BookID TEXT, NZBurl TEXT, NZBtitle TEXT, NZBdate TEXT, NZBprov TEXT, Status TEXT, NZBsize TEXT, AuxInfo TEXT, NZBmode TEXT, Source TEXT, DownloadID TEXT, DLResult TEXT, Added INTEGER DEFAULT 0);
CREATE TABLE subscribers (UserID TEXT REFERENCES users (UserID) ON DELETE CASCADE, Type TEXT, WantID Text);
CREATE TABLE unauthorised (AccessTime TEXT, UserID TEXT REFERENCES users (UserID) ON DELETE CASCADE, Attempt TEXT);
CREATE TABLE haveread (UserID TEXT REFERENCES users (UserID) ON DELETE CASCADE, BookID TEXT);
CREATE TABLE toread (UserID TEXT REFERENCES users (UserID) ON DELETE CASCADE, BookID TEXT);
CREATE TABLE reading (UserID TEXT REFERENCES users (UserID) ON DELETE CASCADE, BookID TEXT);
CREATE TABLE IF NOT EXISTS "users" (UserID TEXT UNIQUE, UserName TEXT UNIQUE, Password TEXT, Email TEXT, Name TEXT, Perms INTEGER DEFAULT 0, CalibreRead TEXT, CalibreToRead TEXT, BookType TEXT, SendTo TEXT, Last_Login TEXT, Login_Count INTEGER DEFAULT 0, Prefs INTEGER DEFAULT 0, Theme TEXT, Reading TEXT, Abandoned TEXT, hc_id TEXT);
CREATE TABLE readinglists (UserID TEXT REFERENCES users (UserID) ON DELETE CASCADE, BookID TEXT, Status INTEGER DEFAULT 0, Percent INTEGER DEFAULT 0, Msg Text, UNIQUE (UserID,BookID));
CREATE TABLE IF NOT EXISTS "series" (SeriesID TEXT UNIQUE, SeriesName TEXT, Status TEXT, Have INTEGER DEFAULT 0, Total INTEGER DEFAULT 0, Updated INTEGER DEFAULT 0, Reason TEXT, gr_id TEXT);
CREATE TABLE IF NOT EXISTS "member" (SeriesID TEXT REFERENCES series (SeriesID) ON DELETE CASCADE, BookID TEXT REFERENCES books (BookID) ON DELETE CASCADE, WorkID TEXT, SeriesNum TEXT);
CREATE TABLE IF NOT EXISTS "seriesauthors" (SeriesID TEXT, AuthorID TEXT REFERENCES authors (AuthorID) ON DELETE CASCADE, UNIQUE (SeriesID,AuthorID));
CREATE INDEX issues_Title_index ON issues (Title);
CREATE INDEX books_index_authorid ON books(AuthorID);
CREATE INDEX books_index_status ON books(Status);
CREATE INDEX authors_index_status ON authors(Status);
CREATE INDEX wanted_index_status ON wanted(Status);
CREATE UNIQUE INDEX unq ON member(seriesid,bookid);
