"""Add status column and add date

Revision ID: 33bf154547fb
Revises: 1758f73a4ac4
Create Date: 2025-06-28 00:41:23.950696

"""

from collections.abc import Sequence

import sqlalchemy as sa

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "33bf154547fb"
down_revision: str | None = "1758f73a4ac4"
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None

status_enum = sa.Enum(
    "Wanted",
    "Have",
    "Ignored",
    "Delete",
    name="book_status",
)


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    status_enum.create(op.get_bind(), checkfirst=True)
    op.add_column(
        "authors",
        sa.Column(
            "add_date",
            sa.DateTime(),
            server_default=sa.text("now()"),
            nullable=False,
        ),
    )
    op.add_column(
        "books",
        sa.Column(
            "status",
            status_enum,
            server_default="Wanted",
            nullable=False,
        ),
    )
    op.add_column(
        "books",
        sa.Column(
            "add_date",
            sa.DateTime(),
            server_default=sa.text("now()"),
            nullable=False,
        ),
    )
    op.add_column(
        "series",
        sa.Column(
            "add_date",
            sa.DateTime(),
            server_default=sa.text("now()"),
            nullable=False,
        ),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column("series", "add_date")
    op.drop_column("books", "add_date")
    op.drop_column("books", "status")
    op.drop_column("authors", "add_date")
    status_enum.drop(op.get_bind(), checkfirst=True)
    # ### end Alembic commands ###
